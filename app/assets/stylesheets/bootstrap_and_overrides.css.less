@import "twitter/bootstrap/bootstrap";
@import "twitter/bootstrap/responsive";

// Set the correct sprite paths
@iconSpritePath: asset-path("twitter/bootstrap/glyphicons-halflings.png");
@iconWhiteSpritePath: asset-path("twitter/bootstrap/glyphicons-halflings-white.png");

// Set the Font Awesome (Font Awesome is default. You can disable by commenting below lines)
// Note: If you use asset_path() here, your compiled bootstrap_and_overrides.css will not
//       have the proper paths. So for now we use the absolute path.
@fontAwesomeEotPath: asset-path("fontawesome-webfont.eot?v=3.0.2");
@fontAwesomeEotPath_iefix: asset-path("fontawesome-webfont.eot?#iefix&v=3.0.2");
@fontAwesomeWoffPath: asset-path("fontawesome-webfont.woff?v=3.0.2");
@fontAwesomeTtfPath: asset-path("fontawesome-webfont.ttf?v=3.0.2");

// Font Awesome
@import "fontawesome";

// Glyphicons
//@import "twitter/bootstrap/sprites.less";

// Your custom LESS stylesheets goes here
//
// Since bootstrap was imported above you have access to its mixins which
// you may use and inherit here
//
// If you'd like to override bootstrap's own variables, you can do so here as well
// See http://twitter.github.com/bootstrap/customize.html#variables for their names and documentation
//
// Example:
// @linkColor: #ff0000;

@grey-light:#ececea;
@grey:#dfdddb;
@grey-dark:#c5c5c4;
@grey-darker:#5f5f5e;
@grey-darkest:#1f1f1f;
@blue:#2e59ff;
@green:#41ff20;
@yellow:#e6e82d;
@red:#ff3912;

// Bootstrap overrides
@linkColor: @grey-darkest;

.rounded {
  @radius:10px;
  -webkit-border-radius: @radius; -moz-border-radius: @radius; border-radius: @radius;
  -moz-background-clip: padding; -webkit-background-clip: padding-box; background-clip: padding-box;
}
.shadow(@color:@grey-dark) {
  @blur:10px;
  -webkit-box-shadow: 0px 0px @blur 1px @color;
     -moz-box-shadow: 0px 0px @blur 1px @color;
          box-shadow: 0px 0px @blur 1px @color;
}
body, button, input, select, textarea { font-family: sans-serif; color: @grey-darkest; }
a {font-weight:bold;color:@grey-darkest;text-decoration:none;}
html.no-touch a:hover {text-decoration:underline;}
html, body, .container-fluid {height:100%;}
#app {position:relative;float:left;width:100%;height:100%;}
#background {
  position:absolute;
  z-index:-1;
  height:100%;
  width:120%;
  left:-20px;
  top:0;
  overflow:hidden;
}
.transition {
  transition:all 1.2s linear;
  position:fixed;
}
.kanji-wall {
  position:absolute;
  font-size:20px;
  line-height:1.2;
  letter-spacing:4px;
  top:-100px;
  left:-100px;
  word-break:break-word;
}
.kanji-wall span,
.lite .kanji-wall {
  opacity:0.1;
}
.kanji-wall {
  &.jlpt1 .jlpt1,
  &.jlpt2 .jlpt2,
  &.jlpt3 .jlpt3,
  &.jlpt4 .jlpt4 {
    opacity:0.2;
  }
}
#control {margin:20px 0;}
#title {font-weight:bold;float:left;}
#user {float:right;}
#learnt {margin-left:20px;float:left;}

.test {
  font-size:@baseFontSize * 1.5;
  line-height:@baseLineHeight * 1.5;
}
.question {
  font-size:@baseFontSize * 2;
  line-height:@baseLineHeight * 2;
  margin-bottom:20px;
  .literal {
    font-size:120px;
    line-height:1;
    text-align:center;
  }
  .word {
    display:block;
  }
}
.options {
  /* Negative to counter 10px padding */
  margin-top:-10px;
  .card {
    cursor: pointer;
    padding:10px 0;
    clear:left;
  }
  .number {
    display:block;
    float:left;
    margin-right:20px;
    color:@grey;
  }
  .kanji {
    border-left:solid 2px @grey;
    margin-left:30px;
    padding-left:20px;
    .literal {
      font-size:@baseFontSize * 2;
    }
  }
  .card.correct .kanji {
    border-color:@green !important;
  }
  .card.incorrect .kanji {
    border-color:@red !important;
  }
}
html.no-touch .options .card:hover {
  .kanji {
    border-color:@grey-darkest;
  }
  .number {
    color:@grey-darkest;
  }
}
/* Only displays wanted info */
.question .kanji > div, .options .kanji > div {
  display:none;
}
.card {
  &.literal .literal,
  &.meaning .meaning,
  &.reading .reading {
    display:block;
  }
}
.kunyomi .suffix {
  color:lighten(@grey-darkest, 40%);
}

.button {
  cursor:pointer;
}
.dialogue {
  margin:0 auto;
}
span.error {color:@red;padding:0 10px;}

form.error {
  input[type=text],
  input[type=password] {
    border:1px solid @red;
  }
}

.loading {
  text-align:center;
  margin-top:100px;
}


